{# Pyramid implementation of web2py local_comments plugin

   A callable Jinja2 macro seems like the closest analogy to web2py's plugins. 
#}

{% macro local_comments(filter, url) -%}

{# diagnostic chatter
  <div style="color: red; font-weight: bold; border: 1px dashed red;">
    <p>LOCAL COMMENTS APPEAR HERE!</p>
    <p> &nbsp; filter = {{filter}}</p>
    <p> &nbsp; url = {{url}}</p>
  </div>
#}

  <div id="{{ 'TODO_c59826038298' }}">
    <div class="plugin_localcomments">
      <div class="reply"><a class="btn btn-small reply" href="#">Add a new topic</a></div>
      <ul>
      </ul>
    </div>
  </div>

{%- endmacro -%}


{% macro wrap_comment_in_markup(comment) -%}

    <li class="{{ comment.is_issue_node and 'issue' or 'comment' }}">
      <div>
       {% if 'title' in comment: %}
        <div>{{ comment.title }}</div>
        <a class="topic-title" href="{{ comment.html_url }} target="_blank">on GitHub</a>
       {% endif %}
       {% if comment.is_issue_node %}
        ISSUE!
       {% endif %}
        <br /><strong>TODO: grab more markup from views/plugins_localcomments.py node()</strong>
      </div>
    </li>

{%- endmacro -%}
